
===== FILE: src/App.jsx =====

// src/App.jsx
import { BrowserRouter } from 'react-router-dom';
import AppRoutes from './router';

// Global styles
import './styles/reset.css';
import './styles/variables.css';
import './styles/common.css';
import './styles/App.css';

function App() {
  return (
    <BrowserRouter>
      <AppRoutes />
    </BrowserRouter>
  );
}

export default App;

===== FILE: src/components/BottomNav.jsx =====

// src/components/BottomNav.jsx
import { useNavigate, useLocation } from 'react-router-dom';

export default function BottomNav() {
  const navigate = useNavigate();
  const location = useLocation();

  const navItems = [
    { icon: 'üè†', label: 'Home', path: '/home' },
    { icon: 'üè™', label: 'Shop', path: '/shop' },
    { icon: 'üì¶', label: 'Items', path: '/items' },
    { icon: 'üìã', label: 'Orders', path: '/orders' },
    { icon: 'üë§', label: 'Profile', path: '/profile' },
  ];

  return (
    <div
      style={{
        position: 'fixed',
        bottom: 0,
        left: '50%',
        transform: 'translateX(-50%)',
        width: '100%',
        maxWidth: '375px',
        background: 'white',
        borderTop: '1px solid var(--divider)',
        display: 'flex',
        justifyContent: 'space-around',
        padding: '12px 0',
        zIndex: 1000
      }}
    >
      {navItems.map(item => (
        <button
          key={item.path}
          onClick={() => navigate(item.path)}
          style={{
            background: 'none',
            border: 'none',
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            gap: '4px',
            fontSize: '12px',
            color:
              location.pathname === item.path
                ? 'var(--primary-color)'
                : 'var(--text-secondary)',
            cursor: 'pointer'
          }}
        >
          <span style={{ fontSize: '20px' }}>{item.icon}</span>
          {item.label}
        </button>
      ))}
    </div>
  );
}

===== FILE: src/components/MobileLayout.jsx =====

// src/components/MobileLayout.jsx
export default function MobileLayout({ children }) {
  return (
    <div className="mobile-screen fade-in">
      <div className="screen-container">
        {children}
      </div>
    </div>
  );
}

===== FILE: src/main.jsx =====

// src/main.jsx
import React from "react";
import ReactDOM from "react-dom/client";
import App from "./App";
import "./styles/reset.css";

ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

===== FILE: src/pages/AddItem.jsx =====

import { useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function AddItem(){
  const nav=useNavigate(); const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  const [item,setItem]=useState({title:'',price:'',quantity_in_stock:0,unit:'pcs'});
  const save=async()=>{
    if(!item.title||!item.price)return alert('Title & price');
    const res=await fetch(`${backend}/item/add`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':tok},body:JSON.stringify(item)}).then(r=>r.json());
    if(res.status==='success') nav('/vendor/items'); else alert(res.message);
  };
  return(<div className="screen-content">
    <h2 className="title text-center mb-lg">Add Item</h2>
    {['title','price','quantity_in_stock','unit'].map(f=>(
      <div className="form-group" key={f}><label className="form-label">{f.replace('_',' ').toUpperCase()}</label>
        <input className="form-input" value={item[f]} onChange={e=>setItem({...item,[f]:e.target.value})}/></div>
    ))}
    <button className="btn btn-primary btn-full" onClick={save}>Save</button>
  </div>);
}

===== FILE: src/pages/Analytics.jsx =====

import '../styles/common.css'; import '../styles/App.css';

export default function Analytics(){
  return(<div className="screen-content">
    <h2 className="title mb-lg">Analytics</h2>
    <p>Advanced analytics coming soon üöß</p>
  </div>);
}

===== FILE: src/pages/Chat.jsx =====

import { useEffect,useState } from 'react'; import { useParams } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function Chat(){
  const {id}=useParams(); const [msgs,setMsgs]=useState([]); const [text,setText]=useState('');
  const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');

  const load=()=>fetch(`${backend}/order/vendor/messages/${id}`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setMsgs(d.messages||[]));
  useEffect(()=>{load();},[]);
  const send=async()=>{
    if(!text.trim())return;
    const res=await fetch(`${backend}/order/vendor/message/send/${id}`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':tok},body:JSON.stringify({message:text.trim()})}).then(r=>r.json());
    if(res.status==='success'){setText('');load();} else alert(res.message);
  };

  return(<div className="screen-content">
    <h2 style={{fontSize:20,fontWeight:600,marginBottom:16}}>Chat</h2>
    <div style={{flex:1,overflowY:'auto',marginBottom:56}}>
      {msgs.map(m=>(
        <div key={m.id} style={{marginBottom:8,textAlign:m.sender_phone===tok?'right':'left'}}>
          <span style={{display:'inline-block',padding:'8px 12px',borderRadius:16,background:m.sender_phone===tok?'var(--primary-gradient)':'var(--background-soft)',color:m.sender_phone===tok?'#fff':'inherit'}}>{m.message}</span>
        </div>
      ))}
    </div>
    <div style={{position:'fixed',bottom:0,left:0,right:0,display:'flex',padding:12,background:'#fff',borderTop:'1px solid var(--divider)'}}>
      <input style={{flex:1,border:'1px solid var(--divider)',borderRadius:20,padding:'8px 12px'}} value={text} onChange={e=>setText(e.target.value)}/>
      <button className="btn btn-primary" style={{marginLeft:8}} onClick={send}>Send</button>
    </div>
  </div>);
}

===== FILE: src/pages/CreateShop.jsx =====

import { useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function CreateShop(){
  const [shop,setShop]=useState({shop_name:'',shop_type:'grocery',description:'',delivers:true,is_open:true});
  const backend=import.meta.env.VITE_BACKEND_URL; const token=localStorage.getItem('auth_token'); const nav=useNavigate();

  const create=async()=>{
    if(!shop.shop_name){alert('Shop name');return;}
    const res=await fetch(`${backend}/vendor/create-shop`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':token},body:JSON.stringify(shop)});
    const d=await res.json(); if(d.status==='success') nav('/vendor/home'); else alert(d.message);
  };

  return(<div className="mobile-screen fade-in">
    <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
    <div className="screen-content"><h2 className="title text-center mb-lg">Create Shop</h2>
      {['shop_name','shop_type','description'].map(f=>(
        <div className="form-group" key={f}><label className="form-label">{f.replace('_',' ').toUpperCase()}</label>
          <input className="form-input" value={shop[f]} onChange={e=>setShop({...shop,[f]:e.target.value})}/></div>
      ))}
      <div className="form-group"><label className="form-label">Delivers?</label>
        <input type="checkbox" checked={shop.delivers} onChange={e=>setShop({...shop,delivers:e.target.checked})}/></div>
      <button className="btn btn-primary btn-full btn-large" onClick={create}>Create</button>
    </div></div>);
}

===== FILE: src/pages/EditItem.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate,useParams } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function EditItem(){
  const {id}=useParams(); const nav=useNavigate(); const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  const [item,setItem]=useState(null);

  useEffect(()=>{fetch(`${backend}/item/my`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setItem(d.data.find(i=>i.id==id)));},[]);
  const update=async()=>{
    const res=await fetch(`${backend}/item/update/${id}`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':tok},body:JSON.stringify(item)}).then(r=>r.json());
    if(res.status==='success') nav('/vendor/items'); else alert(res.message);
  };
  if(!item)return <div className="screen-content"><p>Loading...</p></div>;
  return(<div className="screen-content">
    <h2 className="title text-center mb-lg">Edit Item</h2>
    {['title','price','quantity_in_stock','unit'].map(f=>(
      <div className="form-group" key={f}><label className="form-label">{f.replace('_',' ').toUpperCase()}</label>
        <input className="form-input" value={item[f]} onChange={e=>setItem({...item,[f]:e.target.value})}/></div>
    ))}
    <button className="btn btn-primary btn-full" onClick={update}>Update</button>
  </div>);
}

===== FILE: src/pages/Items.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function Items(){
  const [items,setItems]=useState([]); const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  useEffect(()=>{fetch(`${backend}/item/my`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setItems(d.data||[]));},[]);
  return(<div className="screen-content">
    <h2 style={{fontSize:20,fontWeight:600,marginBottom:16}}>My Items</h2>
    <button className="btn btn-primary btn-full mb-md" onClick={()=>nav('/vendor/items/add')}>Add Item +</button>
    {items.length===0?<p>No items.</p>:items.map(it=>(
      <div key={it.id} onClick={()=>nav(`/vendor/items/${it.id}/edit`)} style={{border:'1px solid var(--divider)',borderRadius:8,padding:12,marginBottom:12,cursor:'pointer',display:'flex',justifyContent:'space-between'}}>
        <div><p style={{margin:'0 0 4px',fontWeight:600}}>{it.title}</p><p style={{margin:0,fontSize:12,color:'var(--text-secondary)'}}>‚Çπ{it.price} ‚Ä¢ Stock {it.quantity_in_stock}</p></div>
        <span style={{fontSize:16,color:'var(--text-secondary)'}}>‚Üí</span>
      </div>
    ))}
  </div>);
}

===== FILE: src/pages/OrderDetail.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate, useParams } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function OrderDetail(){
  const {id}=useParams(); const [order,setOrder]=useState(null); const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');

  const fetchData=()=>fetch(`${backend}/order/vendor/messages/${id}`,{headers:{Authorization:tok}}).then(r=>r.json());
  useEffect(()=>{fetch(`${backend}/order/vendor`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setOrder(d.orders.find(o=>o.order_id==id)));},[]);
  const updateStatus=async status=>{
    const res=await fetch(`${backend}/order/vendor/status/${id}`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':tok},body:JSON.stringify({status})}).then(r=>r.json());
    if(res.status==='success') setOrder({...order,status}); else alert(res.message);
  };

  if(!order) return <div className="screen-content"><p>Loading...</p></div>;
  return(<div className="screen-content">
    <h2 style={{fontSize:20,fontWeight:600,marginBottom:16}}>Order #{order.order_id}</h2>
    <p style={{margin:'0 0 12px'}}>Status: <b>{order.status}</b></p>
    <h3 style={{fontSize:16,fontWeight:600,marginBottom:8}}>Items</h3>
    {order.items.map((it,i)=>(
      <div key={i} style={{display:'flex',justifyContent:'space-between',marginBottom:4}}>
        <span>{it.name} x{it.quantity}</span><span>‚Çπ{it.subtotal}</span>
      </div>
    ))}
    <p style={{textAlign:'right',fontWeight:600,marginTop:8}}>Total: ‚Çπ{order.final_amount}</p>
    <div style={{display:'flex',gap:12,marginTop:24}}>
      {order.status==='pending'&&<button className="btn btn-primary flex-1" onClick={()=>updateStatus('accepted')}>Accept</button>}
      {order.status!=='delivered'&&<button className="btn flex-1" onClick={()=>updateStatus('delivered')}>Mark Delivered</button>}
    </div>
    <button className="btn-secondary btn-full mt-md" onClick={()=>nav(`/vendor/order/${id}/chat`)}>Open Chat üí¨</button>
  </div>);
}

===== FILE: src/pages/Orders.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function Orders(){
  const [orders,setOrders]=useState([]); const [loading,setLoading]=useState(true); const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');

  useEffect(()=>{fetch(`${backend}/order/vendor`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>{setOrders(d.orders||[]);setLoading(false);});},[]);
  if(loading) return <div className="screen-content"><p>Loading...</p></div>;
  return(<div className="screen-content"><h2 style={{fontSize:20,fontWeight:600,marginBottom:16}}>All Orders</h2>
    {orders.length===0?<p>No orders yet.</p>:orders.map(o=>(
      <div key={o.order_id} onClick={()=>nav(`/vendor/order/${o.order_id}`)} style={{border:'1px solid var(--divider)',borderRadius:8,padding:12,marginBottom:12,cursor:'pointer'}}>
        <p style={{margin:'0 0 4px',fontWeight:600}}>Order #{o.order_id} ‚Ä¢ {o.status}</p>
        <p style={{margin:0,fontSize:12,color:'var(--text-secondary)'}}>‚Çπ{o.final_amount} ‚Ä¢ {new Date(o.created_at).toLocaleString()}</p>
      </div>
    ))}
  </div>);
}

===== FILE: src/pages/Support.jsx =====

import '../styles/common.css'; import '../styles/App.css';

export default function Support(){
  return(<div className="screen-content">
    <h2 className="title mb-lg">Help & Support</h2>
    <p>üìß support@habrio.app</p>
    <p>üìû +91-99999-99999</p>
    <p className="subtitle">We respond within 24 hours.</p>
  </div>);
}

===== FILE: src/pages/VendorBasicOnboard.jsx =====

import { useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function VendorBasicOnboarding(){
  const [form,setForm]=useState({name:'',city:'',society:''}); const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL; const token=localStorage.getItem('auth_token');

  const submit=async()=>{
    const {name,city,society}=form;
    if(!name||!city||!society)return alert('Fill all');
    const res=await fetch(`${backend}/onboarding/basic`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':token},body:JSON.stringify({...form,role:'vendor'})});
    const d=await res.json(); if(d.status==='success') nav('/vendor/onboarding/profile'); else alert(d.message);
  };

  return(
    <div className="mobile-screen fade-in">
      <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
      <div className="screen-content">
        <h2 className="title text-center mb-lg">Your Details</h2>
        {['name','city','society'].map(f=>(
          <div className="form-group" key={f}>
            <label className="form-label">{f.charAt(0).toUpperCase()+f.slice(1)}</label>
            <input className="form-input" value={form[f]} onChange={e=>setForm({...form,[f]:e.target.value})}/>
          </div>
        ))}
        <button className="btn btn-primary btn-full btn-large" onClick={submit}>Continue</button>
      </div>
    </div>
  );
}

===== FILE: src/pages/VendorHome.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function VendorHome(){
  const [shop,setShop]=useState(null); const [orders,setOrders]=useState([]); const [wallet,setWallet]=useState(0);
  const nav=useNavigate(); const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');

  useEffect(()=>{load();},[]);
  const load=async()=>{
    const s=await fetch(`${backend}/shop/my`,{headers:{Authorization:tok}}).then(r=>r.json());
    if(s.status==='success') setShop(s.data);
    const o=await fetch(`${backend}/order/vendor`,{headers:{Authorization:tok}}).then(r=>r.json());
    if(o.status==='success') setOrders(o.orders.slice(0,3));
    const w=await fetch(`${backend}/vendor/wallet`,{headers:{Authorization:tok}}).then(r=>r.json());
    if(w.status==='success') setWallet(w.balance);
  };

  if(!shop) return <div className="screen-content"><p>Loading...</p></div>;

  return(
    <div className="screen-content">
      <h2 style={{fontSize:20,fontWeight:600,margin:'0 0 8px'}}>üëã {shop.shop_name}</h2>
      <p style={{color:'var(--text-secondary)',margin:'0 0 24px'}}>{shop.shop_type} ‚Ä¢ {shop.society}</p>

      {/* Wallet card */}
      <div onClick={()=>nav('/vendor/wallet')} style={{background:'var(--primary-gradient)',borderRadius:12,padding:20,color:'#fff',marginBottom:24,cursor:'pointer'}}>
        <p style={{margin:0,opacity:.9,fontSize:14}}>Wallet Balance</p>
        <h3 style={{margin:'4px 0 0',fontSize:24}}>‚Çπ{wallet.toFixed(2)}</h3>
      </div>

      {/* Quick Links */}
      <div style={{display:'grid',gridTemplateColumns:'repeat(3,1fr)',gap:12,marginBottom:24}}>
        {[
          {icon:'üì¶',label:'Orders',path:'/vendor/orders'},
          {icon:'üõí',label:'Items',path:'/vendor/items'},
          {icon:'üí∞',label:'Wallet',path:'/vendor/wallet'},
          {icon:'üìà',label:'Analytics',path:'/vendor/analytics'},
          {icon:'üë§',label:'Profile',path:'/vendor/profile'},
          {icon:'‚ùì',label:'Support',path:'/vendor/support'},
        ].map(x=>(
          <div key={x.label} onClick={()=>nav(x.path)} style={{background:'var(--background-soft)',border:'1px solid var(--divider)',borderRadius:8,padding:'16px 8px',textAlign:'center',cursor:'pointer'}}>
            <div style={{fontSize:24,marginBottom:8}}>{x.icon}</div><p style={{margin:0,fontSize:12,fontWeight:500}}>{x.label}</p>
          </div>
        ))}
      </div>

      {orders.length>0 && (
        <>
          <h3 style={{fontSize:18,fontWeight:600,margin:'0 0 12px'}}>Recent Orders</h3>
          <div style={{display:'flex',flexDirection:'column',gap:12}}>
            {orders.map(o=>(
              <div key={o.order_id} onClick={()=>nav(`/vendor/order/${o.order_id}`)} style={{border:'1px solid var(--divider)',borderRadius:8,padding:12,cursor:'pointer',display:'flex',justifyContent:'space-between',alignItems:'center'}}>
                <div><p style={{margin:'0 0 4px',fontWeight:600}}>Order #{o.order_id}</p><p style={{margin:0,fontSize:12,color:'var(--text-secondary)'}}>‚Çπ{o.final_amount} ‚Ä¢ {o.status}</p></div>
                <span style={{fontSize:16,color:'var(--text-secondary)'}}>‚Üí</span>
              </div>
            ))}
          </div>
        </>
      )}
    </div>
  );
}

===== FILE: src/pages/VendorLogin.jsx =====

import { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import '../styles/common.css';
import '../styles/App.css';

export default function VendorLogin() {
  const [phone,setPhone] = useState('');
  const navigate = useNavigate();
  const backend = import.meta.env.VITE_BACKEND_URL;

  const sendOtp = async ()=>{
    if(!/^[0-9]{10}$/.test(phone)){alert('Enter 10-digit phone');return;}
    const res = await fetch(`${backend}/send-otp`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone:'+91'+phone})});
    const data = await res.json();
    if(data.status==='success') navigate('/vendor/otp',{state:{phone}});
    else alert(data.message||'Failed');
  };

  return (
    <div className="mobile-screen fade-in">
      <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
      <div className="screen-content">
        <h2 className="title text-center mb-lg" style={{paddingTop:48}}>Vendor Login</h2>
        <div className="form-group mb-md">
          <div className="phone-input-group"><div className="country-code">+91</div>
            <input type="tel" className="phone-input" placeholder="9876543210" maxLength="10" value={phone} onChange={e=>setPhone(e.target.value)}/>
          </div>
        </div>
        <button className="btn btn-primary btn-full btn-large" onClick={sendOtp}>Send OTP</button>
      </div>
    </div>
  );
}

===== FILE: src/pages/VendorOtp.jsx =====

import { useState } from 'react';
import { useLocation,useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function VendorOtp(){
  const [otp,setOtp]=useState(''); const {state}=useLocation(); const phone=state?.phone; const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL;

  const verify=async()=>{
    if(!/^[0-9]{6}$/.test(otp)){alert('Enter 6-digit');return;}
    const res=await fetch(`${backend}/verify-otp`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({phone:'+91'+phone,otp})});
    const data=await res.json();
    if(data.status==='success'){localStorage.setItem('auth_token',data.auth_token);
      data.basic_onboarding_done?nav('/vendor/home'):nav('/vendor/onboarding/basic');
    }else alert(data.message||'Incorrect OTP');
  };

  return(
    <div className="mobile-screen fade-in">
      <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
      <div className="screen-content">
        <h2 className="title text-center mb-lg">OTP for +91 {phone}</h2>
        <input className="otp-input" maxLength="6" placeholder="------" value={otp} onChange={e=>setOtp(e.target.value)} style={{width:'100%',textAlign:'center',fontSize:24,letterSpacing:4,padding:12,border:'1px solid #ccc',borderRadius:8}}/>
        <button className="btn btn-primary btn-full btn-large mt-lg" onClick={verify}>Verify</button>
      </div>
    </div>
  );
}

===== FILE: src/pages/VendorProfile.jsx =====

import { useEffect,useState } from 'react';
import '../styles/common.css'; import '../styles/App.css';

export default function VendorProfile(){
  const [profile,setProfile]=useState(null); const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  useEffect(()=>{fetch(`${backend}/profile/me`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setProfile(d.data));},[]);
  if(!profile) return <div className="screen-content"><p>Loading...</p></div>;
  return(<div className="screen-content">
    <h2 className="title mb-lg">My Profile</h2>
    <p><b>Name:</b> {profile.name}</p>
    <p><b>Phone:</b> {profile.phone}</p>
    <p><b>City:</b> {profile.city}</p>
    <p><b>Society:</b> {profile.society}</p>
  </div>);
}

===== FILE: src/pages/VendorProfileSetup.jsx =====

import { useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function VendorProfileSetup(){
  const nav=useNavigate(); const backend=import.meta.env.VITE_BACKEND_URL; const token=localStorage.getItem('auth_token');
  const [profile,setProfile]=useState({business_name:'',business_type:'',gst_number:'',address:''});

  const submit=async()=>{
    const {business_name,business_type,address}=profile;
    if(!business_name||!business_type||!address){alert('Fill mandatory');return;}
    const res=await fetch(`${backend}/vendor/profile`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':token},body:JSON.stringify(profile)});
    const d=await res.json(); if(d.status==='success') nav('/vendor/create-shop'); else alert(d.message);
  };

  return(
    <div className="mobile-screen fade-in">
      <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
      <div className="screen-content">
        <h2 className="title text-center mb-lg">Business Profile</h2>
        {['business_name','business_type','gst_number','address'].map(f=>(
          <div className="form-group" key={f}>
            <label className="form-label">{f.replace('_',' ').toUpperCase()}</label>
            <input className="form-input" value={profile[f]} onChange={e=>setProfile({...profile,[f]:e.target.value})}/>
          </div>
        ))}
        <button className="btn btn-primary btn-full btn-large" onClick={submit}>Save & Continue</button>
      </div>
    </div>
  );
}

===== FILE: src/pages/VendorTitleScreen.jsx =====

import { useNavigate } from 'react-router-dom';
import '../styles/common.css';
import '../styles/App.css';

export default function VendorTitleScreen() {
  const navigate = useNavigate();
  return (
    <div className="mobile-screen fade-in">
      <div className="status-bar"><span className="time">9:41</span><span className="battery">üîã</span></div>
      <div className="screen-content text-center">
        <div className="logo-box" style={{background:'var(--primary-gradient)',width:84,height:84,borderRadius:24,display:'flex',alignItems:'center',justifyContent:'center',margin:'0 auto 24px',boxShadow:'0 6px 14px rgba(255,125,30,.3)'}} >
          <span style={{fontSize:36,color:'#fff'}}>üè™</span>
        </div>
        <h1 className="title mb-xs" style={{fontSize:24}}>Welcome Vendor</h1>
        <p className="subtitle mb-lg" style={{fontSize:14}}>Manage your shop with Habrio</p>
        <button className="btn btn-primary btn-full btn-large" onClick={()=>navigate('/vendor/login')}>Get Started</button>
        <p style={{fontSize:12,color:'var(--text-tertiary)'}}>Built with ‚ù§Ô∏è for local sellers</p>
      </div>
    </div>
  );
}

===== FILE: src/pages/Wallet.jsx =====

import { useEffect,useState } from 'react'; import { useNavigate } from 'react-router-dom';
import '../styles/common.css'; import '../styles/App.css';

export default function Wallet(){
  const [balance,setBalance]=useState(0); const nav=useNavigate();
  const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  useEffect(()=>{fetch(`${backend}/vendor/wallet`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setBalance(d.balance||0));},[]);
  return(<div className="screen-content">
    <h2 style={{fontSize:20,fontWeight:600,marginBottom:16}}>Wallet</h2>
    <div style={{background:'var(--primary-gradient)',padding:24,borderRadius:12,color:'#fff',marginBottom:24}}>
      <h3 style={{margin:0,fontSize:28}}>‚Çπ{balance.toFixed(2)}</h3><p style={{margin:0,opacity:.9,fontSize:14}}>Current balance</p>
    </div>
    <button className="btn btn-primary btn-full mb-md" onClick={()=>nav('/vendor/wallet/history')}>Transaction History ‚Üí</button>
    <button className="btn btn-secondary btn-full" onClick={()=>nav('/vendor/wallet/withdraw')}>Withdraw</button>
  </div>);
}

===== FILE: src/pages/WalletHistory.jsx =====

import { useEffect,useState } from 'react';
import '../styles/common.css'; import '../styles/App.css';

export default function WalletHistory(){
  const [txns,setTxns]=useState([]); const backend=import.meta.env.VITE_BACKEND_URL; const tok=localStorage.getItem('auth_token');
  useEffect(()=>{fetch(`${backend}/vendor/wallet/history`,{headers:{Authorization:tok}}).then(r=>r.json()).then(d=>setTxns(d.transactions||[]));},[]);
  return(<div className="screen-content">
    <h2 className="title mb-lg">Transactions</h2>
    {txns.length===0?<p>No transactions.</p>:txns.map(t=>(
      <div key={t.id} style={{border:'1px solid var(--divider)',borderRadius:8,padding:12,marginBottom:12}}>
        <div style={{display:'flex',justifyContent:'space-between',marginBottom:4}}><span>{t.type}</span><span>‚Çπ{t.amount}</span></div>
        <p style={{margin:0,fontSize:12,color:'var(--text-secondary)'}}>{new Date(t.created_at).toLocaleString()}</p>
        {t.reference&&<p style={{margin:0,fontSize:12,color:'var(--text-secondary)'}}>Ref: {t.reference}</p>}
      </div>
    ))}
  </div>);
}

===== FILE: src/router.jsx =====

// src/router.jsx
import { Routes, Route } from 'react-router-dom';
import MobileLayout from './components/MobileLayout';
import BottomNav from './components/BottomNav';

// Auth & Onboarding (no layout)
import VendorLogin from './pages/VendorLogin';
import VendorOtp from './pages/VendorOtp';
import VendorTitleScreen from './pages/VendorTitleScreen';
import VendorBasicOnboard from './pages/VendorBasicOnboard';
import VendorProfileSetup from './pages/VendorProfileSetup';
import CreateShop from './pages/CreateShop';

// Main App Pages
import VendorHome from './pages/VendorHome';
import VendorProfile from './pages/VendorProfile';
import Items from './pages/Items';
import AddItem from './pages/AddItem';
import EditItem from './pages/EditItem';
import Orders from './pages/Orders';
import OrderDetail from './pages/OrderDetail';
import Support from './pages/Support';
import Chat from './pages/Chat';
import Analytics from './pages/Analytics';
import Wallet from './pages/Wallet';
import WalletHistory from './pages/WalletHistory';

// Utility layout wrapper with optional bottom nav
function PageWithLayout({ element, withNav }) {
  return (
    <MobileLayout>
      {element}
      {withNav && <BottomNav />}
    </MobileLayout>
  );
}

export default function AppRoutes() {
  return (
    <Routes>
      {/* Auth & Onboarding Routes (no layout) */}
      <Route path="/" element={<VendorTitleScreen />} />
      <Route path="/vendor/login" element={<VendorLogin />} />
      <Route path="vendor/otp" element={<VendorOtp />} />
      <Route path="/onboarding/basic" element={<VendorBasicOnboard />} />
      <Route path="/vendor/profile-setup" element={<VendorProfileSetup />} />
      <Route path="/vendor/create-shop" element={<CreateShop />} />

      {/* Routes WITH bottom nav */}
      <Route path="/vendor/home" element={<PageWithLayout element={<VendorHome />} withNav />} />
      <Route path="/vendor/items" element={<PageWithLayout element={<Items />} withNav />} />
      <Route path="/vendor/orders" element={<PageWithLayout element={<Orders />} withNav />} />
      <Route path="/vendor/profile" element={<PageWithLayout element={<VendorProfile />} withNav />} />
      <Route path="/vendor/wallet" element={<PageWithLayout element={<Wallet />} withNav />} />

      {/* Routes WITHOUT bottom nav */}
      <Route path="/vendor/items/add" element={<PageWithLayout element={<AddItem />} />} />
      <Route path="/vendor/items/edit/:itemId" element={<PageWithLayout element={<EditItem />} />} />
      <Route path="/vendor/order/:orderId" element={<PageWithLayout element={<OrderDetail />} />} />
      <Route path="/vendor/chat/:orderId" element={<PageWithLayout element={<Chat />} />} />
      <Route path="/vendor/wallet/history" element={<PageWithLayout element={<WalletHistory />} />} />
      <Route path="/vendor/analytics" element={<PageWithLayout element={<Analytics />} />} />
      <Route path="/vendor/support" element={<PageWithLayout element={<Support />} />} />

      {/* Fallback Route */}
      <Route path="*" element={<PageWithLayout element={<VendorHome />} withNav />} />
    </Routes>
  );
}


===== FILE: src/styles/App.css =====

/* Root styles */
body {
  background-color: var(--background);
  margin: 0;
  padding: 0;
  font-family: 'Inter', sans-serif;
  color: var(--text-primary);
}

html, body, #root {
  height: 100%;
  width: 100%;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Mobile screen container */
.mobile-screen {
  width: 100%;
  max-width: 375px;
  min-height: 100vh;
  background-color: var(--background);
  display: flex;
  flex-direction: column;
  overflow: hidden;
}

/* Optional container inside screen (status + content) */
.screen-container {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Page entrance animation */
.fade-in {
  animation: fadeIn 0.4s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(12px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Common layout fixes */
.full-width {
  width: 100%;
  box-sizing: border-box;
}

.full-height {
  height: 100%;
}

.centered {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Utility spacing */
.mt-xxs { margin-top: 4px; }
.mt-xs  { margin-top: 8px; }
.mt-sm  { margin-top: 12px; }
.mt-md  { margin-top: 16px; }
.mt-lg  { margin-top: 24px; }
.mt-xl  { margin-top: 32px; }

.mb-xxs { margin-bottom: 4px; }
.mb-xs  { margin-bottom: 8px; }
.mb-sm  { margin-bottom: 12px; }
.mb-md  { margin-bottom: 16px; }
.mb-lg  { margin-bottom: 24px; }
.mb-xl  { margin-bottom: 32px; }


===== FILE: src/styles/common.css =====

/* src/styles/common.css */

/* === Screen Layout === */
.screen-content {
  padding: var(--space-lg);
  background-color: var(--background);
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.full-screen {
  width: 100%;
  box-sizing: border-box;
}

/* === Typography === */
.title {
  font-size: var(--font-title);
  font-weight: 600;
  color: var(--text-primary);
  text-align: center;
}

.subtitle {
  font-size: var(--font-body);
  color: var(--text-secondary);
  text-align: center;
  margin-top: var(--space-xs);
  margin-bottom: var(--space-md);
}

/* === Buttons === */
.btn {
  height: var(--btn-height);
  border-radius: var(--border-radius);
  padding: 0 var(--space-md);
  font-size: var(--font-body);
  font-weight: 600;
  text-align: center;
  cursor: pointer;
  transition: all var(--transition-speed);
}

.btn-primary {
  background: var(--primary-gradient);
  color: white;
  border: none;
}

.btn-primary:hover {
  opacity: 0.95;
}

.btn-full {
  width: 100%;
}

.btn-large {
  font-size: 16px;
}

/* === Input Fields === */
.phone-input-group {
  display: flex;
  align-items: center;
  background-color: var(--background-soft);
  border: 1px solid var(--divider);
  border-radius: var(--border-radius);
  padding: 0 var(--space-sm);
  height: var(--btn-height);
  margin-bottom: var(--space-md);
}

.phone-input-group .country-code {
  font-size: 14px;
  margin-right: var(--space-xs);
  color: var(--text-secondary);
}

.phone-input-group input {
  border: none;
  background: transparent;
  flex: 1;
  font-size: var(--font-body);
  color: var(--text-primary);
}

/* === OTP Input === */
.otp-input {
  width: 48px;
  height: 56px;
  text-align: center;
  font-size: 20px;
  font-weight: 600;
  border: 1px solid var(--divider);
  border-radius: var(--border-radius);
  background-color: var(--background-soft);
  margin-right: var(--space-sm);
}

/* Full-width OTP input (for single box input) */
.otp-full-input {
  width: 100%;
  height: 56px;
  font-size: 20px;
  font-weight: 600;
  text-align: center;
  border: 1px solid var(--divider);
  border-radius: var(--border-radius);
  background-color: var(--background-soft);
  letter-spacing: 6px;
  padding: 0 var(--space-sm);
  box-sizing: border-box;
  margin-bottom: var(--space-md);
}

/* === Status Bar (Top UI) === */
.status-bar {
  display: flex;
  justify-content: space-between;
  font-size: 12px;
  color: var(--text-secondary);
  padding: var(--space-sm) var(--space-md);
}

/* === Text & Spacing Utilities === */
.text-center {
  text-align: center;
}

.mb-lg {
  margin-bottom: var(--space-lg);
}

.mb-md {
  margin-bottom: var(--space-md);
}

.mt-md {
  margin-top: var(--space-md);
}

/* === Misc === */
a.link {
  color: var(--primary-color);
  font-weight: 500;
  text-decoration: none;
}

/* Fixes for TitleScreen */

.no-padding {
  padding: 0 !important;
}

.logo-box {
  background: var(--primary-gradient);
  width: 100px;
  height: 100px;
  border-radius: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 48px auto 28px;
  box-shadow: 0 10px 24px rgba(90, 79, 255, 0.25);
}

.logo-icon {
  font-size: 44px;
  color: white;
}

.form-label {
  display: block;
  margin-bottom: var(--space-xs);
  font-size: var(--font-body);
  font-weight: 500;
  color: var(--text-primary);
}

.form-input {
  width: 100%;
  padding: var(--space-sm);
  font-size: var(--font-body);
  border: 1px solid var(--divider);
  border-radius: var(--border-radius);
  background-color: var(--background-soft);
  margin-bottom: var(--space-md);
}


===== FILE: src/styles/reset.css =====

/* src/styles/reset.css */

/* Import fonts and variables */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');
@import './variables.css';

/* Reset default browser styles */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: var(--font-family);
}

html, body {
  height: 100%;
  background-color: var(--background);
  color: var(--text-primary);
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
}

input, button, textarea, select {
  font: inherit;
  color: inherit;
  background: none;
  border: none;
  outline: none;
}

a {
  color: inherit;
  text-decoration: none;
}

img {
  max-width: 100%;
  display: block;
}

/* Remove arrows from number inputs on mobile/Chrome */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

body, html, #root {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  box-sizing: border-box;
}

===== FILE: src/styles/variables.css =====

/* src/styles/variables.css */

:root {
  /* === COLORS === */
  --primary-color: #FC644F;
  --primary-color-dark: #E35645;
  --primary-gradient: linear-gradient(135deg, #FC644F, #E35645);
  --accent-color: #00C775;

  --background: #FFFFFF;
  --background-soft: #F9FAFB;
  --divider: #E5E7EB;

  --text-primary: #111827;
  --text-secondary: #6B7280;
  --text-disabled: #D1D5DB;

  /* === TYPOGRAPHY === */
  --font-display: 28px;
  --font-title: 20px;
  --font-subtitle: 16px;
  --font-body: 14px;
  --font-caption: 12px;

  --font-family: 'Inter', 'SF Pro Text', 'Roboto', sans-serif;

  /* === SPACING === */
  --space-xxs: 4px;
  --space-xs: 8px;
  --space-sm: 12px;
  --space-md: 16px;
  --space-lg: 24px;
  --space-xl: 32px;

  /* === COMPONENT === */
  --border-radius: 12px;
  --btn-height: 44px;
  --transition-speed: 0.2s ease;
}

